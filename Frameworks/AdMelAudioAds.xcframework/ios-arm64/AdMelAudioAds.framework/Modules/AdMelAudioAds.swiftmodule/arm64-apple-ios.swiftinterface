// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios17.5 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name AdMelAudioAds
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import AVFoundation
@_exported import AdMelAudioAds
import Foundation
import MediaPlayer
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_inheritsConvenienceInitializers @objc public class AdMelAudioPlugin : ObjectiveC.NSObject {
  @objc public static func initializePlugin()
  @objc public static func playAudio(_ audioPath: Swift.UnsafePointer<Swift.CChar>)
  @objc public static func stopAudio()
  @objc public static func isPlaying() -> Swift.Bool
  @objc public static func getCurrentPosition() -> Swift.Float
  @objc public static func getDuration() -> Swift.Float
  @objc public static func getProgress() -> Swift.Float
  @objc public static func getCurrentVolume() -> Swift.Float
  @objc public static func setVolume(_ volume: Swift.Float)
  @objc public static func lowerVolume(_ duration: Swift.Float)
  @objc public static func restoreVolume(_ duration: Swift.Float)
  @objc public static func getMaxVolume() -> Swift.Float
  @objc override dynamic public init()
  @objc deinit
}
@_cdecl("initializePlugin")
public func initializePlugin()
@_cdecl("playAudio")
public func playAudio(_ audioPath: Swift.UnsafePointer<Swift.CChar>)
@_cdecl("stopAudio")
public func stopAudio()
@_cdecl("isPlaying")
public func isPlaying() -> Swift.Bool
@_cdecl("getCurrentPosition")
public func getCurrentPosition() -> Swift.Float
@_cdecl("getDuration")
public func getDuration() -> Swift.Float
@_cdecl("getProgress")
public func getProgress() -> Swift.Float
@_cdecl("getCurrentVolume")
public func getCurrentVolume() -> Swift.Float
@_cdecl("setVolume")
public func setVolume(_ volume: Swift.Float)
@_cdecl("lowerVolume")
public func lowerVolume(_ duration: Swift.Float)
@_cdecl("restoreVolume")
public func restoreVolume(_ duration: Swift.Float)
@_cdecl("getMaxVolume")
public func getMaxVolume() -> Swift.Float
